@import 'tailwindcss';

@plugin 'tailwindcss-animate';

@custom-variant dark (&:is(.dark *));

@theme {
  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --font-sans: "Ubuntu", sans-serif;
  --font-mono: "Ubuntu Mono", monospace;

  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }
  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
}

@utility container {
  margin-inline: auto;
  padding-inline: 2rem;
  @media (width >= --theme(--breakpoint-sm)) {
    max-width: none;
  }
  @media (width >= 1400px) {
    max-width: 1400px;
  }
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@layer base {
  :root {
    --background: 126 68% 98%;
    --foreground: 126 76% 1%;
    --muted: 246 7% 92%;
    --muted-foreground: 246 5% 39%;
    --popover: 126 68% 98%;
    --popover-foreground: 126 76% 1%;
    --card: 126 68% 97%;
    --card-foreground: 0 0% 0%;
    --border: 126 13% 93%;
    --input: 126 13% 93%;
    --primary: 126 78% 23%;
    --primary-foreground: 0 0% 100%;
    --secondary: 125.93 77.78% 22.94%;
    --secondary-foreground: 246 78% 83%;
    --accent: 6 78% 23%;
    --accent-foreground: 6 78% 83%;
    --destructive: 0 86% 23%;
    --destructive-foreground: 0 86% 83%;
    --ring: 126 78% 23%;
    --radius: 0.5rem;
  }

  .dark {
    --background: 126 44% 1%;
    --foreground: 126 21% 100%;
    --muted: 246 7% 8%;
    --muted-foreground: 246 5% 61%;
    --popover: 126 44% 1%;
    --popover-foreground: 126 21% 100%;
    --card: 126 44% 2%;
    --card-foreground: 0 0% 100%;
    --border: 126 13% 10%;
    --input: 128.57 13.73% 10%;
    --primary: 234.07 77.78% 22.94%;
    --primary-foreground: 246.27 77.01% 82.94%;
    --secondary: 125.93 77.78% 22.94%;
    --secondary-foreground: 0 0% 100%;
    --accent: 6 78% 23%;
    --accent-foreground: 6 78% 83%;
    --destructive: 0 86% 51%;
    --destructive-foreground: 0 0% 100%;
    --ring: 126 78% 23%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/*
  ---break---
*/

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}
